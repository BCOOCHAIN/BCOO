{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"encoding_rs","disambiguator":[3208182695475603963,16671752985691636624]},"crate_root":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src","external_crates":[{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[451015332518386345,12616910850237566401]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16746868065623213498,9074085878651121975]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11691455356848847772,13404935376487248212]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7539909478603523759,1507731599405122440]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10865508162509001456,833405817713000449]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12627880532723991922,9080356613218334855]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15184984254005438421,13421964498468238256]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[5844413487463745628,10504756031280733323]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[11251083499731578370,13881208619067196952]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":424,"byte_end":230160,"line_start":10,"line_end":5638,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":424,"byte_end":230160,"line_start":10,"line_end":5638,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":40},{"krate":0,"index":76},{"krate":0,"index":120},{"krate":0,"index":160},{"krate":0,"index":208},{"krate":0,"index":252},{"krate":0,"index":274},{"krate":0,"index":312},{"krate":0,"index":352},{"krate":0,"index":374},{"krate":0,"index":432},{"krate":0,"index":464},{"krate":0,"index":502},{"krate":0,"index":718},{"krate":0,"index":1144},{"krate":0,"index":1206},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1540},{"krate":0,"index":1782},{"krate":0,"index":1788},{"krate":0,"index":1784},{"krate":0,"index":1544},{"krate":0,"index":1792},{"krate":0,"index":1802},{"krate":0,"index":1798},{"krate":0,"index":1794},{"krate":0,"index":1806},{"krate":0,"index":1818},{"krate":0,"index":1812},{"krate":0,"index":1808},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1842},{"krate":0,"index":1854},{"krate":0,"index":1848},{"krate":0,"index":1844},{"krate":0,"index":1572},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630}],"decl_id":null,"docs":" encoding_rs is a Gecko-oriented Free Software / Open Source implementation\n of the [Encoding Standard](https://encoding.spec.whatwg.org/) in Rust.\n Gecko-oriented means that converting to and from UTF-16 is supported in\n addition to converting to and from UTF-8, that the performance and\n streamability goals are browser-oriented, and that FFI-friendliness is a\n goal.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1206},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mem","qualname":"::mem","value":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encoding_rs-0.8.10\\src\\mem.rs","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1226},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1764},{"krate":0,"index":1760},{"krate":0,"index":1756},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1768},{"krate":0,"index":1234},{"krate":0,"index":1776},{"krate":0,"index":1236},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298}],"decl_id":null,"docs":" Functions for converting between different in-RAM representations of text\n and for quickly checking if the Unicode Bidirectional Algorithm can be\n avoided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":749},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1549068,"byte_end":1549074,"line_start":58,"line_end":58,"column_start":5,"column_end":11},"name":"Latin1","qualname":"::mem::Latin1Bidi::Latin1","value":"Latin1Bidi::Latin1","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":" Every character is below U+0100.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":753},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1549200,"byte_end":1549211,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::mem::Latin1Bidi::LeftToRight","value":"Latin1Bidi::LeftToRight","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":" There is at least one character that's U+0100 or higher, but there\n are no right-to-left characters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1549276,"byte_end":1549280,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Bidi","qualname":"::mem::Latin1Bidi::Bidi","value":"Latin1Bidi::Bidi","parent":{"krate":0,"index":1754},"children":[],"decl_id":null,"docs":" There is at least one right-to-left character.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1754},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1549010,"byte_end":1549020,"line_start":56,"line_end":56,"column_start":10,"column_end":20},"name":"Latin1Bidi","qualname":"::mem::Latin1Bidi","value":"Latin1Bidi::{Latin1, LeftToRight, Bidi}","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757}],"decl_id":null,"docs":" Classification of text as Latin1 (all code points are below U+0100),\n left-to-right with some non-Latin1 characters or as containing at least\n some right-to-left characters.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1548946,"byte_end":1548957,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"repr(C)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1548990,"byte_end":1549000,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1549001,"byte_end":1549287,"line_start":56,"line_end":64,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573211,"byte_end":1573219,"line_start":624,"line_end":624,"column_start":8,"column_end":16},"name":"is_ascii","qualname":"::mem::is_ascii","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-ASCII.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573194,"byte_end":1573203,"line_start":623,"line_end":623,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1240},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573513,"byte_end":1573527,"line_start":634,"line_end":634,"column_start":8,"column_end":22},"name":"is_basic_latin","qualname":"::mem::is_basic_latin","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is all-Basic Latin (i.e. UTF-16 representing\n only ASCII characters).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573496,"byte_end":1573505,"line_start":633,"line_end":633,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573853,"byte_end":1573867,"line_start":644,"line_end":644,"column_start":8,"column_end":22},"name":"is_utf8_latin1","qualname":"::mem::is_utf8_latin1","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer is valid UTF-8 representing only code points\n less than or equal to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1573836,"byte_end":1573845,"line_start":643,"line_end":643,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1244},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1574164,"byte_end":1574177,"line_start":654,"line_end":654,"column_start":8,"column_end":21},"name":"is_str_latin1","qualname":"::mem::is_str_latin1","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1574147,"byte_end":1574156,"line_start":653,"line_end":653,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1246},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1574474,"byte_end":1574489,"line_start":664,"line_end":664,"column_start":8,"column_end":23},"name":"is_utf16_latin1","qualname":"::mem::is_utf16_latin1","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the buffer represents only code point less than or equal\n to U+00FF.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1574457,"byte_end":1574466,"line_start":663,"line_end":663,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1575523,"byte_end":1575535,"line_start":685,"line_end":685,"column_start":8,"column_end":20},"name":"is_utf8_bidi","qualname":"::mem::is_utf8_bidi","value":"fn (buffer: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially-invalid UTF-8 buffer contains code points\n that trigger right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1575506,"byte_end":1575515,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1594277,"byte_end":1594288,"line_start":1106,"line_end":1106,"column_start":8,"column_end":19},"name":"is_str_bidi","qualname":"::mem::is_str_bidi","value":"fn (buffer: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1594260,"byte_end":1594269,"line_start":1105,"line_end":1105,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1601074,"byte_end":1601087,"line_start":1266,"line_end":1266,"column_start":8,"column_end":21},"name":"is_utf16_bidi","qualname":"::mem::is_utf16_bidi","value":"fn (buffer: &[u16]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 buffer contains code points that trigger\n right-to-left processing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1601057,"byte_end":1601066,"line_start":1265,"line_end":1265,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1601899,"byte_end":1601911,"line_start":1282,"line_end":1282,"column_start":8,"column_end":20},"name":"is_char_bidi","qualname":"::mem::is_char_bidi","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a code point triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1601874,"byte_end":1601891,"line_start":1281,"line_end":1281,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1604841,"byte_end":1604864,"line_start":1357,"line_end":1357,"column_start":8,"column_end":31},"name":"is_utf16_code_unit_bidi","qualname":"::mem::is_utf16_code_unit_bidi","value":"fn (u: u16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a UTF-16 code unit triggers right-to-left processing.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1604816,"byte_end":1604833,"line_start":1356,"line_end":1356,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1606226,"byte_end":1606256,"line_start":1399,"line_end":1399,"column_start":8,"column_end":38},"name":"check_utf8_for_latin1_and_bidi","qualname":"::mem::check_utf8_for_latin1_and_bidi","value":"fn (buffer: &[u8]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1606209,"byte_end":1606218,"line_start":1398,"line_end":1398,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1606950,"byte_end":1606979,"line_start":1420,"line_end":1420,"column_start":8,"column_end":37},"name":"check_str_for_latin1_and_bidi","qualname":"::mem::check_str_for_latin1_and_bidi","value":"fn (buffer: &str) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a valid UTF-8 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1606933,"byte_end":1606942,"line_start":1419,"line_end":1419,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1262},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1607813,"byte_end":1607844,"line_start":1443,"line_end":1443,"column_start":8,"column_end":39},"name":"check_utf16_for_latin1_and_bidi","qualname":"::mem::check_utf16_for_latin1_and_bidi","value":"fn (buffer: &[u16]) -> Latin1Bidi","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a potentially invalid UTF-16 buffer contains code points\n that trigger right-to-left processing or is all-Latin1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1607796,"byte_end":1607805,"line_start":1442,"line_end":1442,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1264},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1608302,"byte_end":1608323,"line_start":1459,"line_end":1459,"column_start":8,"column_end":29},"name":"convert_utf8_to_utf16","qualname":"::mem::convert_utf8_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-8 to valid UTF-16 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1608285,"byte_end":1608294,"line_start":1458,"line_end":1458,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1609630,"byte_end":1609650,"line_start":1498,"line_end":1498,"column_start":8,"column_end":28},"name":"convert_str_to_utf16","qualname":"::mem::convert_str_to_utf16","value":"fn (src: &str, dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts valid UTF-8 to valid UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1609613,"byte_end":1609622,"line_start":1497,"line_end":1497,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1268},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1613847,"byte_end":1613876,"line_start":1603,"line_end":1603,"column_start":8,"column_end":37},"name":"convert_utf16_to_utf8_partial","qualname":"::mem::convert_utf16_to_utf8_partial","value":"fn (src: &[u16], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1613830,"byte_end":1613839,"line_start":1602,"line_end":1602,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1270},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1614841,"byte_end":1614862,"line_start":1629,"line_end":1629,"column_start":8,"column_end":29},"name":"convert_utf16_to_utf8","qualname":"::mem::convert_utf16_to_utf8","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1614824,"byte_end":1614833,"line_start":1628,"line_end":1628,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1272},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1615745,"byte_end":1615773,"line_start":1650,"line_end":1650,"column_start":8,"column_end":36},"name":"convert_utf16_to_str_partial","qualname":"::mem::convert_utf16_to_str_partial","value":"fn (src: &[u16], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system with potentially insufficient output\n space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1615728,"byte_end":1615737,"line_start":1649,"line_end":1649,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1616748,"byte_end":1616768,"line_start":1680,"line_end":1680,"column_start":8,"column_end":28},"name":"convert_utf16_to_str","qualname":"::mem::convert_utf16_to_str","value":"fn (src: &[u16], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts potentially-invalid UTF-16 to valid UTF-8 with errors replaced\n with the REPLACEMENT CHARACTER such that the validity of the output is\n signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1616731,"byte_end":1616740,"line_start":1679,"line_end":1679,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1276},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1617381,"byte_end":1617404,"line_start":1699,"line_end":1699,"column_start":8,"column_end":31},"name":"convert_latin1_to_utf16","qualname":"::mem::convert_latin1_to_utf16","value":"fn (src: &[u8], dst: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-16.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1617364,"byte_end":1617373,"line_start":1698,"line_end":1698,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1278},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1618452,"byte_end":1618482,"line_start":1727,"line_end":1727,"column_start":8,"column_end":38},"name":"convert_latin1_to_utf8_partial","qualname":"::mem::convert_latin1_to_utf8_partial","value":"fn (src: &[u8], dst: &mut [u8]) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1618435,"byte_end":1618444,"line_start":1726,"line_end":1726,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1280},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1620506,"byte_end":1620528,"line_start":1784,"line_end":1784,"column_start":8,"column_end":30},"name":"convert_latin1_to_utf8","qualname":"::mem::convert_latin1_to_utf8","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1620489,"byte_end":1620498,"line_start":1783,"line_end":1783,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1621228,"byte_end":1621257,"line_start":1803,"line_end":1803,"column_start":8,"column_end":37},"name":"convert_latin1_to_str_partial","qualname":"::mem::convert_latin1_to_str_partial","value":"fn (src: &[u8], dst: &mut str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system with potentially insufficient\n output space.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1621211,"byte_end":1621220,"line_start":1802,"line_end":1802,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1622233,"byte_end":1622254,"line_start":1833,"line_end":1833,"column_start":8,"column_end":29},"name":"convert_latin1_to_str","qualname":"::mem::convert_latin1_to_str","value":"fn (src: &[u8], dst: &mut str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Converts bytes whose unsigned value is interpreted as Unicode code point\n (i.e. U+0000 to U+00FF, inclusive) to UTF-8 such that the validity of the\n output is signaled using the Rust type system.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1622216,"byte_end":1622225,"line_start":1832,"line_end":1832,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1623597,"byte_end":1623625,"line_start":1867,"line_end":1867,"column_start":8,"column_end":36},"name":"convert_utf8_to_latin1_lossy","qualname":"::mem::convert_utf8_to_latin1_lossy","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-8 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1623580,"byte_end":1623589,"line_start":1866,"line_end":1866,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1625904,"byte_end":1625933,"line_start":1931,"line_end":1931,"column_start":8,"column_end":37},"name":"convert_utf16_to_latin1_lossy","qualname":"::mem::convert_utf16_to_latin1_lossy","value":"fn (src: &[u16], dst: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If the input is valid UTF-16 representing only Unicode code points from\n U+0000 to U+00FF, inclusive, converts the input into output that\n represents the value of each code point as the unsigned byte value of\n each output byte.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1625887,"byte_end":1625896,"line_start":1930,"line_end":1930,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1290},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1626365,"byte_end":1626382,"line_start":1945,"line_end":1945,"column_start":8,"column_end":25},"name":"utf16_valid_up_to","qualname":"::mem::utf16_valid_up_to","value":"fn (buffer: &[u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the first unpaired surrogate or, if the input is\n valid UTF-16 in its entirety, the length of the input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1626348,"byte_end":1626357,"line_start":1944,"line_end":1944,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1292},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1626543,"byte_end":1626564,"line_start":1951,"line_end":1951,"column_start":8,"column_end":29},"name":"ensure_utf16_validity","qualname":"::mem::ensure_utf16_validity","value":"fn (buffer: &mut [u16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces unpaired surrogates in the input with the REPLACEMENT CHARACTER.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1626526,"byte_end":1626535,"line_start":1950,"line_end":1950,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1294},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1627193,"byte_end":1627212,"line_start":1975,"line_end":1975,"column_start":8,"column_end":27},"name":"copy_ascii_to_ascii","qualname":"::mem::copy_ascii_to_ascii","value":"fn (src: &[u8], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination up to the first non-ASCII byte\n (or the end of the input if it is ASCII in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1627176,"byte_end":1627185,"line_start":1974,"line_end":1974,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1296},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1627955,"byte_end":1627980,"line_start":2002,"line_end":2002,"column_start":8,"column_end":33},"name":"copy_ascii_to_basic_latin","qualname":"::mem::copy_ascii_to_basic_latin","value":"fn (src: &[u8], dst: &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies ASCII from source to destination zero-extending it to UTF-16 up to\n the first non-ASCII byte (or the end of the input if it is ASCII in its\n entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1627938,"byte_end":1627947,"line_start":2001,"line_end":2001,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1298},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1628746,"byte_end":1628771,"line_start":2029,"line_end":2029,"column_start":8,"column_end":33},"name":"copy_basic_latin_to_ascii","qualname":"::mem::copy_basic_latin_to_ascii","value":"fn (src: &[u16], dst: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies Basic Latin from source to destination narrowing it to ASCII up to\n the first non-Basic Latin code unit (or the end of the input if it is\n Basic Latin in its entirety).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,109,101,109,46,114,115],"byte_start":1628729,"byte_end":1628738,"line_start":2028,"line_end":2028,"column_start":1,"column_end":10}}]},{"kind":"Static","id":{"krate":0,"index":1320},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":42998,"byte_end":43007,"line_start":777,"line_end":777,"column_start":12,"column_end":21},"name":"BIG5_INIT","qualname":"::BIG5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Big5](static.BIG5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1322},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":44197,"byte_end":44201,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"BIG5","qualname":"::BIG5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Big5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1324},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":44828,"byte_end":44839,"line_start":819,"line_end":819,"column_start":12,"column_end":23},"name":"EUC_JP_INIT","qualname":"::EUC_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-JP](static.EUC_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1326},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":45815,"byte_end":45821,"line_start":843,"line_end":843,"column_start":12,"column_end":18},"name":"EUC_JP","qualname":"::EUC_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1328},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":46450,"byte_end":46461,"line_start":857,"line_end":857,"column_start":12,"column_end":23},"name":"EUC_KR_INIT","qualname":"::EUC_KR_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [EUC-KR](static.EUC_KR.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1330},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":47418,"byte_end":47424,"line_start":879,"line_end":879,"column_start":12,"column_end":18},"name":"EUC_KR","qualname":"::EUC_KR","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The EUC-KR encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1332},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":48047,"byte_end":48055,"line_start":893,"line_end":893,"column_start":12,"column_end":20},"name":"GBK_INIT","qualname":"::GBK_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [GBK](static.GBK.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1334},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":49340,"byte_end":49343,"line_start":921,"line_end":921,"column_start":12,"column_end":15},"name":"GBK","qualname":"::GBK","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The GBK encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1336},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":49969,"byte_end":49980,"line_start":935,"line_end":935,"column_start":12,"column_end":23},"name":"IBM866_INIT","qualname":"::IBM866_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [IBM866](static.IBM866.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1338},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":50742,"byte_end":50748,"line_start":955,"line_end":955,"column_start":12,"column_end":18},"name":"IBM866","qualname":"::IBM866","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The IBM866 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":51387,"byte_end":51403,"line_start":969,"line_end":969,"column_start":12,"column_end":28},"name":"ISO_2022_JP_INIT","qualname":"::ISO_2022_JP_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-2022-JP](static.ISO_2022_JP.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1342},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":52300,"byte_end":52311,"line_start":991,"line_end":991,"column_start":12,"column_end":23},"name":"ISO_2022_JP","qualname":"::ISO_2022_JP","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-2022-JP encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1344},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":52955,"byte_end":52971,"line_start":1005,"line_end":1005,"column_start":12,"column_end":28},"name":"ISO_8859_10_INIT","qualname":"::ISO_8859_10_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-10](static.ISO_8859_10.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1346},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":53736,"byte_end":53747,"line_start":1025,"line_end":1025,"column_start":12,"column_end":23},"name":"ISO_8859_10","qualname":"::ISO_8859_10","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-10 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1348},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":54391,"byte_end":54407,"line_start":1039,"line_end":1039,"column_start":12,"column_end":28},"name":"ISO_8859_13_INIT","qualname":"::ISO_8859_13_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-13](static.ISO_8859_13.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":55199,"byte_end":55210,"line_start":1059,"line_end":1059,"column_start":12,"column_end":23},"name":"ISO_8859_13","qualname":"::ISO_8859_13","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-13 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1352},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":55854,"byte_end":55870,"line_start":1073,"line_end":1073,"column_start":12,"column_end":28},"name":"ISO_8859_14_INIT","qualname":"::ISO_8859_14_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-14](static.ISO_8859_14.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1354},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":56635,"byte_end":56646,"line_start":1093,"line_end":1093,"column_start":12,"column_end":23},"name":"ISO_8859_14","qualname":"::ISO_8859_14","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-14 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1356},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":57290,"byte_end":57306,"line_start":1107,"line_end":1107,"column_start":12,"column_end":28},"name":"ISO_8859_15_INIT","qualname":"::ISO_8859_15_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-15](static.ISO_8859_15.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1358},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":58030,"byte_end":58041,"line_start":1126,"line_end":1126,"column_start":12,"column_end":23},"name":"ISO_8859_15","qualname":"::ISO_8859_15","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-15 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1360},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":58685,"byte_end":58701,"line_start":1140,"line_end":1140,"column_start":12,"column_end":28},"name":"ISO_8859_16_INIT","qualname":"::ISO_8859_16_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-16](static.ISO_8859_16.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1362},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":59483,"byte_end":59494,"line_start":1160,"line_end":1160,"column_start":12,"column_end":23},"name":"ISO_8859_16","qualname":"::ISO_8859_16","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-16 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1364},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":60136,"byte_end":60151,"line_start":1174,"line_end":1174,"column_start":12,"column_end":27},"name":"ISO_8859_2_INIT","qualname":"::ISO_8859_2_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-2](static.ISO_8859_2.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1366},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":60858,"byte_end":60868,"line_start":1192,"line_end":1192,"column_start":12,"column_end":22},"name":"ISO_8859_2","qualname":"::ISO_8859_2","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-2 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1368},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":61509,"byte_end":61524,"line_start":1206,"line_end":1206,"column_start":12,"column_end":27},"name":"ISO_8859_3_INIT","qualname":"::ISO_8859_3_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-3](static.ISO_8859_3.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1370},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":62229,"byte_end":62239,"line_start":1224,"line_end":1224,"column_start":12,"column_end":22},"name":"ISO_8859_3","qualname":"::ISO_8859_3","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-3 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1372},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":62880,"byte_end":62895,"line_start":1238,"line_end":1238,"column_start":12,"column_end":27},"name":"ISO_8859_4_INIT","qualname":"::ISO_8859_4_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-4](static.ISO_8859_4.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1374},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":63600,"byte_end":63610,"line_start":1256,"line_end":1256,"column_start":12,"column_end":22},"name":"ISO_8859_4","qualname":"::ISO_8859_4","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-4 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1376},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":64251,"byte_end":64266,"line_start":1270,"line_end":1270,"column_start":12,"column_end":27},"name":"ISO_8859_5_INIT","qualname":"::ISO_8859_5_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-5](static.ISO_8859_5.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1378},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":64925,"byte_end":64935,"line_start":1288,"line_end":1288,"column_start":12,"column_end":22},"name":"ISO_8859_5","qualname":"::ISO_8859_5","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-5 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1380},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":65576,"byte_end":65591,"line_start":1302,"line_end":1302,"column_start":12,"column_end":27},"name":"ISO_8859_6_INIT","qualname":"::ISO_8859_6_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-6](static.ISO_8859_6.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1382},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":66334,"byte_end":66344,"line_start":1321,"line_end":1321,"column_start":12,"column_end":22},"name":"ISO_8859_6","qualname":"::ISO_8859_6","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-6 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1384},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":66985,"byte_end":67000,"line_start":1335,"line_end":1335,"column_start":12,"column_end":27},"name":"ISO_8859_7_INIT","qualname":"::ISO_8859_7_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-7](static.ISO_8859_7.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1386},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":68057,"byte_end":68067,"line_start":1358,"line_end":1358,"column_start":12,"column_end":22},"name":"ISO_8859_7","qualname":"::ISO_8859_7","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-7 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1388},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":68708,"byte_end":68723,"line_start":1372,"line_end":1372,"column_start":12,"column_end":27},"name":"ISO_8859_8_INIT","qualname":"::ISO_8859_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8](static.ISO_8859_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1390},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":69597,"byte_end":69607,"line_start":1393,"line_end":1393,"column_start":12,"column_end":22},"name":"ISO_8859_8","qualname":"::ISO_8859_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1392},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":70252,"byte_end":70269,"line_start":1407,"line_end":1407,"column_start":12,"column_end":29},"name":"ISO_8859_8_I_INIT","qualname":"::ISO_8859_8_I_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [ISO-8859-8-I](static.ISO_8859_8_I.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1394},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":71148,"byte_end":71160,"line_start":1428,"line_end":1428,"column_start":12,"column_end":24},"name":"ISO_8859_8_I","qualname":"::ISO_8859_8_I","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The ISO-8859-8-I encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1396},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":71795,"byte_end":71806,"line_start":1442,"line_end":1442,"column_start":12,"column_end":23},"name":"KOI8_R_INIT","qualname":"::KOI8_R_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-R](static.KOI8_R.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1398},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":72468,"byte_end":72474,"line_start":1460,"line_end":1460,"column_start":12,"column_end":18},"name":"KOI8_R","qualname":"::KOI8_R","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-R encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1400},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":73103,"byte_end":73114,"line_start":1474,"line_end":1474,"column_start":12,"column_end":23},"name":"KOI8_U_INIT","qualname":"::KOI8_U_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [KOI8-U](static.KOI8_U.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1402},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":73745,"byte_end":73751,"line_start":1492,"line_end":1492,"column_start":12,"column_end":18},"name":"KOI8_U","qualname":"::KOI8_U","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The KOI8-U encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1404},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":74386,"byte_end":74400,"line_start":1506,"line_end":1506,"column_start":12,"column_end":26},"name":"SHIFT_JIS_INIT","qualname":"::SHIFT_JIS_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [Shift_JIS](static.SHIFT_JIS.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1406},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":75210,"byte_end":75219,"line_start":1526,"line_end":1526,"column_start":12,"column_end":21},"name":"SHIFT_JIS","qualname":"::SHIFT_JIS","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The Shift_JIS encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1408},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":75855,"byte_end":75868,"line_start":1540,"line_end":1540,"column_start":12,"column_end":25},"name":"UTF_16BE_INIT","qualname":"::UTF_16BE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16BE](static.UTF_16BE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1410},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":76600,"byte_end":76608,"line_start":1560,"line_end":1560,"column_start":12,"column_end":20},"name":"UTF_16BE","qualname":"::UTF_16BE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16BE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1412},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":77243,"byte_end":77256,"line_start":1574,"line_end":1574,"column_start":12,"column_end":25},"name":"UTF_16LE_INIT","qualname":"::UTF_16LE_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-16LE](static.UTF_16LE.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1414},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":77991,"byte_end":77999,"line_start":1594,"line_end":1594,"column_start":12,"column_end":20},"name":"UTF_16LE","qualname":"::UTF_16LE","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-16LE encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1416},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":78628,"byte_end":78638,"line_start":1608,"line_end":1608,"column_start":12,"column_end":22},"name":"UTF_8_INIT","qualname":"::UTF_8_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [UTF-8](static.UTF_8.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1418},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":79222,"byte_end":79227,"line_start":1625,"line_end":1625,"column_start":12,"column_end":17},"name":"UTF_8","qualname":"::UTF_8","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The UTF-8 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1420},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":79857,"byte_end":79869,"line_start":1639,"line_end":1639,"column_start":12,"column_end":24},"name":"GB18030_INIT","qualname":"::GB18030_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [gb18030](static.GB18030.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1422},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":80723,"byte_end":80730,"line_start":1660,"line_end":1660,"column_start":12,"column_end":19},"name":"GB18030","qualname":"::GB18030","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The gb18030 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1424},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":81366,"byte_end":81380,"line_start":1674,"line_end":1674,"column_start":12,"column_end":26},"name":"MACINTOSH_INIT","qualname":"::MACINTOSH_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [macintosh](static.MACINTOSH.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1426},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":82119,"byte_end":82128,"line_start":1693,"line_end":1693,"column_start":12,"column_end":21},"name":"MACINTOSH","qualname":"::MACINTOSH","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The macintosh encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1428},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":82770,"byte_end":82786,"line_start":1707,"line_end":1707,"column_start":12,"column_end":28},"name":"REPLACEMENT_INIT","qualname":"::REPLACEMENT_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [replacement](static.REPLACEMENT.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1430},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":83627,"byte_end":83638,"line_start":1729,"line_end":1729,"column_start":12,"column_end":23},"name":"REPLACEMENT","qualname":"::REPLACEMENT","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The replacement encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1432},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":84284,"byte_end":84301,"line_start":1743,"line_end":1743,"column_start":12,"column_end":29},"name":"WINDOWS_1250_INIT","qualname":"::WINDOWS_1250_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1250](static.WINDOWS_1250.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1434},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":84957,"byte_end":84969,"line_start":1761,"line_end":1761,"column_start":12,"column_end":24},"name":"WINDOWS_1250","qualname":"::WINDOWS_1250","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1250 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1436},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":85616,"byte_end":85633,"line_start":1775,"line_end":1775,"column_start":12,"column_end":29},"name":"WINDOWS_1251_INIT","qualname":"::WINDOWS_1251_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1251](static.WINDOWS_1251.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1438},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":86281,"byte_end":86293,"line_start":1793,"line_end":1793,"column_start":12,"column_end":24},"name":"WINDOWS_1251","qualname":"::WINDOWS_1251","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1251 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1440},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":86940,"byte_end":86957,"line_start":1807,"line_end":1807,"column_start":12,"column_end":29},"name":"WINDOWS_1252_INIT","qualname":"::WINDOWS_1252_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1252](static.WINDOWS_1252.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1442},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":87669,"byte_end":87681,"line_start":1826,"line_end":1826,"column_start":12,"column_end":24},"name":"WINDOWS_1252","qualname":"::WINDOWS_1252","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1252 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1444},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":88328,"byte_end":88345,"line_start":1840,"line_end":1840,"column_start":12,"column_end":29},"name":"WINDOWS_1253_INIT","qualname":"::WINDOWS_1253_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1253](static.WINDOWS_1253.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1446},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":89163,"byte_end":89175,"line_start":1860,"line_end":1860,"column_start":12,"column_end":24},"name":"WINDOWS_1253","qualname":"::WINDOWS_1253","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1253 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1448},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":89822,"byte_end":89839,"line_start":1874,"line_end":1874,"column_start":12,"column_end":29},"name":"WINDOWS_1254_INIT","qualname":"::WINDOWS_1254_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1254](static.WINDOWS_1254.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1450},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":90551,"byte_end":90563,"line_start":1893,"line_end":1893,"column_start":12,"column_end":24},"name":"WINDOWS_1254","qualname":"::WINDOWS_1254","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1254 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1452},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":91210,"byte_end":91227,"line_start":1907,"line_end":1907,"column_start":12,"column_end":29},"name":"WINDOWS_1255_INIT","qualname":"::WINDOWS_1255_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1255](static.WINDOWS_1255.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1454},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":92032,"byte_end":92044,"line_start":1927,"line_end":1927,"column_start":12,"column_end":24},"name":"WINDOWS_1255","qualname":"::WINDOWS_1255","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1255 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1456},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":92691,"byte_end":92708,"line_start":1941,"line_end":1941,"column_start":12,"column_end":29},"name":"WINDOWS_1256_INIT","qualname":"::WINDOWS_1256_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1256](static.WINDOWS_1256.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1458},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":93354,"byte_end":93366,"line_start":1959,"line_end":1959,"column_start":12,"column_end":24},"name":"WINDOWS_1256","qualname":"::WINDOWS_1256","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1256 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1460},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":94013,"byte_end":94030,"line_start":1973,"line_end":1973,"column_start":12,"column_end":29},"name":"WINDOWS_1257_INIT","qualname":"::WINDOWS_1257_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1257](static.WINDOWS_1257.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1462},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":94762,"byte_end":94774,"line_start":1992,"line_end":1992,"column_start":12,"column_end":24},"name":"WINDOWS_1257","qualname":"::WINDOWS_1257","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1257 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1464},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":95421,"byte_end":95438,"line_start":2006,"line_end":2006,"column_start":12,"column_end":29},"name":"WINDOWS_1258_INIT","qualname":"::WINDOWS_1258_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-1258](static.WINDOWS_1258.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1466},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":96472,"byte_end":96484,"line_start":2029,"line_end":2029,"column_start":12,"column_end":24},"name":"WINDOWS_1258","qualname":"::WINDOWS_1258","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-1258 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1468},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":97129,"byte_end":97145,"line_start":2043,"line_end":2043,"column_start":12,"column_end":28},"name":"WINDOWS_874_INIT","qualname":"::WINDOWS_874_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [windows-874](static.WINDOWS_874.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1470},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":97914,"byte_end":97925,"line_start":2062,"line_end":2062,"column_start":12,"column_end":23},"name":"WINDOWS_874","qualname":"::WINDOWS_874","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The windows-874 encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1472},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":98575,"byte_end":98594,"line_start":2076,"line_end":2076,"column_start":12,"column_end":31},"name":"X_MAC_CYRILLIC_INIT","qualname":"::X_MAC_CYRILLIC_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-mac-cyrillic](static.X_MAC_CYRILLIC.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1474},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":99265,"byte_end":99279,"line_start":2094,"line_end":2094,"column_start":12,"column_end":26},"name":"X_MAC_CYRILLIC","qualname":"::X_MAC_CYRILLIC","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-mac-cyrillic encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1476},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":99932,"byte_end":99951,"line_start":2108,"line_end":2108,"column_start":12,"column_end":31},"name":"X_USER_DEFINED_INIT","qualname":"::X_USER_DEFINED_INIT","value":"Encoding","parent":null,"children":[],"decl_id":null,"docs":" The initializer for the [x-user-defined](static.X_USER_DEFINED.html) encoding.","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1478},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":100631,"byte_end":100645,"line_start":2126,"line_end":2126,"column_start":12,"column_end":26},"name":"X_USER_DEFINED","qualname":"::X_USER_DEFINED","value":"&'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The x-user-defined encoding.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":112333,"byte_end":112341,"line_start":2636,"line_end":2636,"column_start":12,"column_end":20},"name":"Encoding","qualname":"::Encoding","value":"Encoding {  }","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":699}],"decl_id":null,"docs":" An encoding as defined in the [Encoding Standard][1].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":113497,"byte_end":113506,"line_start":2663,"line_end":2663,"column_start":12,"column_end":21},"name":"for_label","qualname":"<Encoding>::for_label","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" Implements the\n [_get an encoding_](https://encoding.spec.whatwg.org/#concept-encoding-get)\n algorithm.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":118208,"byte_end":118232,"line_start":2785,"line_end":2785,"column_start":12,"column_end":36},"name":"for_label_no_replacement","qualname":"<Encoding>::for_label_no_replacement","value":"fn (label: &[u8]) -> Option<&'static Encoding>","parent":null,"children":[],"decl_id":null,"docs":" This method behaves the same as `for_label()`, except when `for_label()`\n would return `Some(REPLACEMENT)`, this method returns `None` instead.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":118187,"byte_end":118196,"line_start":2784,"line_end":2784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119088,"byte_end":119095,"line_start":2810,"line_end":2810,"column_start":12,"column_end":19},"name":"for_bom","qualname":"<Encoding>::for_bom","value":"fn (buffer: &[u8]) -> Option<(&'static Encoding, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Performs non-incremental BOM sniffing.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119067,"byte_end":119076,"line_start":2809,"line_end":2809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119673,"byte_end":119677,"line_start":2829,"line_end":2829,"column_start":12,"column_end":16},"name":"name","qualname":"<Encoding>::name","value":"fn (&'static self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119652,"byte_end":119661,"line_start":2828,"line_end":2828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119946,"byte_end":119967,"line_start":2838,"line_end":2838,"column_start":12,"column_end":33},"name":"can_encode_everything","qualname":"<Encoding>::can_encode_everything","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the _output encoding_ of this encoding can encode every\n `char`. (Only true if the output encoding is UTF-8.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":119925,"byte_end":119934,"line_start":2837,"line_end":2837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":120229,"byte_end":120248,"line_start":2847,"line_end":2847,"column_start":12,"column_end":31},"name":"is_ascii_compatible","qualname":"<Encoding>::is_ascii_compatible","value":"fn (&'static self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the bytes 0x00...0x7F map exclusively to the characters\n U+0000...U+007F and vice versa.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":120208,"byte_end":120217,"line_start":2846,"line_end":2846,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":120861,"byte_end":120876,"line_start":2863,"line_end":2863,"column_start":12,"column_end":27},"name":"output_encoding","qualname":"<Encoding>::output_encoding","value":"fn (&'static self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" Returns the _output encoding_ of this encoding. This is UTF-8 for\n UTF-16BE, UTF-16LE and replacement and the encoding itself otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":120840,"byte_end":120849,"line_start":2862,"line_end":2862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":122837,"byte_end":122843,"line_start":2906,"line_end":2906,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM sniffing_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":122816,"byte_end":122825,"line_start":2905,"line_end":2905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":124932,"byte_end":124955,"line_start":2949,"line_end":2949,"column_start":12,"column_end":35},"name":"decode_with_bom_removal","qualname":"<Encoding>::decode_with_bom_removal","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _with BOM removal_ and with\n malformed sequences replaced with the REPLACEMENT CHARACTER when the\n entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":124911,"byte_end":124920,"line_start":2948,"line_end":2948,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":127109,"byte_end":127136,"line_start":2995,"line_end":2995,"column_start":12,"column_end":39},"name":"decode_without_bom_handling","qualname":"<Encoding>::decode_without_bom_handling","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> (Cow<'a, str>, bool)","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n with malformed sequences replaced with the REPLACEMENT CHARACTER when\n the entire input is available as a single buffer (i.e. the end of the\n buffer marks the end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":131446,"byte_end":131497,"line_start":3090,"line_end":3090,"column_start":12,"column_end":63},"name":"decode_without_bom_handling_and_without_replacement","qualname":"<Encoding>::decode_without_bom_handling_and_without_replacement","value":"fn <'a> (&'static self, bytes: &'a [u8]) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Decode complete input to `Cow<'a, str>` _without BOM handling_ and\n _with malformed sequences treated as fatal_ when the entire input is\n available as a single buffer (i.e. the end of the buffer marks the end\n of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":135638,"byte_end":135644,"line_start":3184,"line_end":3184,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"fn <'a> (&'static self, string: &'a str) -> (Cow<'a, [u8]>, &'static Encoding, bool)","parent":null,"children":[],"decl_id":null,"docs":" Encode complete input to `Cow<'a, [u8]>` with unmappable characters\n replaced with decimal numeric character references when the entire input\n is available as a single buffer (i.e. the end of the buffer marks the\n end of the stream).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":138384,"byte_end":138395,"line_start":3249,"line_end":3249,"column_start":12,"column_end":23},"name":"new_decoder","qualname":"<Encoding>::new_decoder","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM sniffing enabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":138363,"byte_end":138372,"line_start":3248,"line_end":3248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":138974,"byte_end":139002,"line_start":3263,"line_end":3263,"column_start":12,"column_end":40},"name":"new_decoder_with_bom_removal","qualname":"<Encoding>::new_decoder_with_bom_removal","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM removal.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":138953,"byte_end":138962,"line_start":3262,"line_end":3262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":139690,"byte_end":139722,"line_start":3279,"line_end":3279,"column_start":12,"column_end":44},"name":"new_decoder_without_bom_handling","qualname":"<Encoding>::new_decoder_without_bom_handling","value":"fn (&'static self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new decoder for this encoding with BOM handling disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":139669,"byte_end":139678,"line_start":3278,"line_end":3278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":139978,"byte_end":139989,"line_start":3287,"line_end":3287,"column_start":12,"column_end":23},"name":"new_encoder","qualname":"<Encoding>::new_encoder","value":"fn (&'static self) -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new encoder for the output encoding of this encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":139957,"byte_end":139966,"line_start":3286,"line_end":3286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":140562,"byte_end":140578,"line_start":3302,"line_end":3302,"column_start":12,"column_end":28},"name":"utf8_valid_up_to","qualname":"<Encoding>::utf8_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates UTF-8.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":140883,"byte_end":140900,"line_start":3312,"line_end":3312,"column_start":12,"column_end":29},"name":"ascii_valid_up_to","qualname":"<Encoding>::ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ASCII.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141320,"byte_end":141349,"line_start":3324,"line_end":3324,"column_start":12,"column_end":41},"name":"iso_2022_jp_ascii_valid_up_to","qualname":"<Encoding>::iso_2022_jp_ascii_valid_up_to","value":"fn (bytes: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Validates ISO-2022-JP ASCII-state data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":783},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":144682,"byte_end":144692,"line_start":3445,"line_end":3445,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::CoderResult::InputEmpty","value":"CoderResult::InputEmpty","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":785},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":144962,"byte_end":144972,"line_start":3452,"line_end":3452,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::CoderResult::OutputFull","value":"CoderResult::OutputFull","parent":{"krate":0,"index":1792},"children":[],"decl_id":null,"docs":" The converter cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1792},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":144413,"byte_end":144424,"line_start":3439,"line_end":3439,"column_start":10,"column_end":21},"name":"CoderResult","qualname":"::CoderResult","value":"CoderResult::{InputEmpty, OutputFull}","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":785}],"decl_id":null,"docs":" Result of a (potentially partial) decode or encode operation with\n replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":144360,"byte_end":144371,"line_start":3437,"line_end":3437,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":144404,"byte_end":144975,"line_start":3439,"line_end":3453,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":787},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":145365,"byte_end":145375,"line_start":3464,"line_end":3464,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::DecoderResult::InputEmpty","value":"DecoderResult::InputEmpty","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":789},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":145641,"byte_end":145651,"line_start":3471,"line_end":3471,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::DecoderResult::OutputFull","value":"DecoderResult::OutputFull","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The decoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":146559,"byte_end":146568,"line_start":3489,"line_end":3489,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::DecoderResult::Malformed","value":"DecoderResult::Malformed(u8, u8)","parent":{"krate":0,"index":1806},"children":[],"decl_id":null,"docs":" The decoder encountered a malformed byte sequence.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1806},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":145106,"byte_end":145119,"line_start":3458,"line_end":3458,"column_start":10,"column_end":23},"name":"DecoderResult","qualname":"::DecoderResult","value":"DecoderResult::{InputEmpty, OutputFull, Malformed}","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791}],"decl_id":null,"docs":" Result of a (potentially partial) decode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":145053,"byte_end":145064,"line_start":3456,"line_end":3456,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":145097,"byte_end":146625,"line_start":3458,"line_end":3490,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1546},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":151800,"byte_end":151807,"line_start":3589,"line_end":3589,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727}],"decl_id":null,"docs":" A converter that decodes a byte stream into Unicode according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":152992,"byte_end":153000,"line_start":3625,"line_end":3625,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Decoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Decoder` is for.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":152971,"byte_end":152980,"line_start":3624,"line_end":3624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":153546,"byte_end":153568,"line_start":3638,"line_end":3638,"column_start":12,"column_end":34},"name":"max_utf8_buffer_length","qualname":"<Decoder>::max_utf8_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _with replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":158480,"byte_end":158522,"line_start":3728,"line_end":3728,"column_start":12,"column_end":54},"name":"max_utf8_buffer_length_without_replacement","qualname":"<Decoder>::max_utf8_buffer_length_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-8 output size _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":163405,"byte_end":163419,"line_start":3821,"line_end":3821,"column_start":12,"column_end":26},"name":"decode_to_utf8","qualname":"<Decoder>::decode_to_utf8","value":"fn (&mut self, src: &[u8], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":165805,"byte_end":165818,"line_start":3884,"line_end":3884,"column_start":12,"column_end":25},"name":"decode_to_str","qualname":"<Decoder>::decode_to_str","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":167659,"byte_end":167675,"line_start":3928,"line_end":3928,"column_start":12,"column_end":28},"name":"decode_to_string","qualname":"<Decoder>::decode_to_string","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with malformed sequences\n replaced with the REPLACEMENT CHARACTER using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":169586,"byte_end":169619,"line_start":3974,"line_end":3974,"column_start":12,"column_end":45},"name":"decode_to_str_without_replacement","qualname":"<Decoder>::decode_to_str_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut str, last: bool) -> (DecoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 with type system signaling\n of UTF-8 validity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":171321,"byte_end":171357,"line_start":4016,"line_end":4016,"column_start":12,"column_end":48},"name":"decode_to_string_without_replacement","qualname":"<Decoder>::decode_to_string_without_replacement","value":"fn (&mut self, src: &[u8], dst: &mut String, last: bool) -> (DecoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-8 using a `String` receiver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":172438,"byte_end":172461,"line_start":4046,"line_end":4046,"column_start":12,"column_end":35},"name":"max_utf16_buffer_length","qualname":"<Decoder>::max_utf16_buffer_length","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case UTF-16 output size (with or without replacement).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":176971,"byte_end":176986,"line_start":4129,"line_end":4129,"column_start":12,"column_end":27},"name":"decode_to_utf16","qualname":"<Decoder>::decode_to_utf16","value":"fn (&mut self, src: &[u8], dst: &mut [u16], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally decode a byte stream into UTF-16 with malformed sequences\n replaced with the REPLACEMENT CHARACTER.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":179763,"byte_end":179773,"line_start":4201,"line_end":4201,"column_start":5,"column_end":15},"name":"InputEmpty","qualname":"::EncoderResult::InputEmpty","value":"EncoderResult::InputEmpty","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":" The input was exhausted.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":180039,"byte_end":180049,"line_start":4208,"line_end":4208,"column_start":5,"column_end":15},"name":"OutputFull","qualname":"::EncoderResult::OutputFull","value":"EncoderResult::OutputFull","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":" The encoder cannot produce another unit of output, because the output\n buffer does not have enough space left.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":801},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":180292,"byte_end":180302,"line_start":4215,"line_end":4215,"column_start":5,"column_end":15},"name":"Unmappable","qualname":"::EncoderResult::Unmappable","value":"EncoderResult::Unmappable(char)","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":" The encoder encountered an unmappable character.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1842},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":179504,"byte_end":179517,"line_start":4195,"line_end":4195,"column_start":10,"column_end":23},"name":"EncoderResult","qualname":"::EncoderResult","value":"EncoderResult::{InputEmpty, OutputFull, Unmappable}","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801}],"decl_id":null,"docs":" Result of a (potentially partial) encode operation without replacement.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":179451,"byte_end":179462,"line_start":4193,"line_end":4193,"column_start":1,"column_end":12}},{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":179495,"byte_end":180311,"line_start":4195,"line_end":4216,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1576},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":186746,"byte_end":186753,"line_start":4334,"line_end":4334,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":731}],"decl_id":null,"docs":" A converter that encodes a Unicode stream into bytes according to a\n character encoding in a streaming (incremental) manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":187072,"byte_end":187080,"line_start":4349,"line_end":4349,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Encoder>::encoding","value":"fn (&self) -> &'static Encoding","parent":null,"children":[],"decl_id":null,"docs":" The `Encoding` this `Encoder` is for.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":187051,"byte_end":187060,"line_start":4348,"line_end":4348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":187283,"byte_end":187300,"line_start":4356,"line_end":4356,"column_start":12,"column_end":29},"name":"has_pending_state","qualname":"<Encoder>::has_pending_state","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is an ISO-2022-JP encoder that's not in the\n ASCII state and `false` otherwise.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":187262,"byte_end":187271,"line_start":4355,"line_end":4355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":187807,"byte_end":187852,"line_start":4369,"line_end":4369,"column_start":12,"column_end":57},"name":"max_buffer_length_from_utf8_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf8_if_no_unmappables","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":188561,"byte_end":188608,"line_start":4391,"line_end":4391,"column_start":12,"column_end":59},"name":"max_buffer_length_from_utf8_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf8_without_replacement","value":"fn (&self, byte_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-8 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":189102,"byte_end":189118,"line_start":4406,"line_end":4406,"column_start":12,"column_end":28},"name":"encode_from_utf8","qualname":"<Encoder>::encode_from_utf8","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":192341,"byte_end":192364,"line_start":4488,"line_end":4488,"column_start":12,"column_end":35},"name":"encode_from_utf8_to_vec","qualname":"<Encoder>::encode_from_utf8_to_vec","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (CoderResult, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":193093,"byte_end":193129,"line_start":4511,"line_end":4511,"column_start":12,"column_end":48},"name":"encode_from_utf8_without_replacement","qualname":"<Encoder>::encode_from_utf8_without_replacement","value":"fn (&mut self, src: &str, dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":193565,"byte_end":193608,"line_start":4526,"line_end":4526,"column_start":12,"column_end":55},"name":"encode_from_utf8_to_vec_without_replacement","qualname":"<Encoder>::encode_from_utf8_to_vec_without_replacement","value":"fn (&mut self, src: &str, dst: &mut Vec<u8>, last: bool) -> (EncoderResult, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-8 _without replacement_.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":194523,"byte_end":194569,"line_start":4552,"line_end":4552,"column_start":12,"column_end":58},"name":"max_buffer_length_from_utf16_if_no_unmappables","qualname":"<Encoder>::max_buffer_length_from_utf16_if_no_unmappables","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 with\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":195277,"byte_end":195325,"line_start":4574,"line_end":4574,"column_start":12,"column_end":60},"name":"max_buffer_length_from_utf16_without_replacement","qualname":"<Encoder>::max_buffer_length_from_utf16_without_replacement","value":"fn (&self, u16_length: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Query the worst-case output size when encoding from UTF-16 without\n replacement.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":195819,"byte_end":195836,"line_start":4589,"line_end":4589,"column_start":12,"column_end":29},"name":"encode_from_utf16","qualname":"<Encoder>::encode_from_utf16","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (CoderResult, usize, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 with unmappable\n characters replaced with HTML (decimal) numeric character references.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":199414,"byte_end":199451,"line_start":4676,"line_end":4676,"column_start":12,"column_end":49},"name":"encode_from_utf16_without_replacement","qualname":"<Encoder>::encode_from_utf16_without_replacement","value":"fn (&mut self, src: &[u16], dst: &mut [u8], last: bool) -> (EncoderResult, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Incrementally encode into byte stream from UTF-16 _without replacement_.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,98,105,103,53,46,114,115],"byte_start":304863,"byte_end":304874,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":1632},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,98,105,103,53,46,114,115],"byte_start":310758,"byte_end":310769,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":1636},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":319890,"byte_end":319902,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":320391,"byte_end":320403,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":1640},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":327538,"byte_end":327550,"line_start":222,"line_end":222,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":1644},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,107,114,46,114,115],"byte_start":337001,"byte_end":337013,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":1648},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,107,114,46,114,115],"byte_start":346357,"byte_end":346369,"line_start":226,"line_end":226,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":1652},{"krate":0,"index":1654}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":353695,"byte_end":353709,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":354260,"byte_end":354274,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":369566,"byte_end":369580,"line_start":398,"line_end":398,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":1660},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":382848,"byte_end":382864,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":1672},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":399182,"byte_end":399198,"line_start":419,"line_end":419,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":1676},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":426922,"byte_end":426940,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":430235,"byte_end":430250,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":1680},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":437264,"byte_end":437279,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":1684},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":446850,"byte_end":446867,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":457698,"byte_end":457715,"line_start":235,"line_end":235,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":1688},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,49,54,46,114,115],"byte_start":476987,"byte_end":476999,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":1690},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,56,46,114,115],"byte_start":514053,"byte_end":514064,"line_start":462,"line_end":462,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":1702},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,56,46,114,115],"byte_start":518833,"byte_end":518844,"line_start":610,"line_end":610,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":543067,"byte_end":543085,"line_start":32,"line_end":32,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":1706},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":546608,"byte_end":546626,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":1708},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466355,"byte_end":1466364,"line_start":77,"line_end":77,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466565,"byte_end":1466577,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466807,"byte_end":1466824,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1476057,"byte_end":1476067,"line_start":373,"line_end":373,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1476890,"byte_end":1476904,"line_start":410,"line_end":410,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1477481,"byte_end":1477497,"line_start":437,"line_end":437,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1478090,"byte_end":1478104,"line_start":468,"line_end":468,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1479389,"byte_end":1479406,"line_start":518,"line_end":518,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1481111,"byte_end":1481127,"line_start":580,"line_end":580,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1489326,"byte_end":1489339,"line_start":801,"line_end":801,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1490613,"byte_end":1490629,"line_start":851,"line_end":851,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1492321,"byte_end":1492336,"line_start":913,"line_end":913,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1500928,"byte_end":1500939,"line_start":1144,"line_end":1144,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":994},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1512109,"byte_end":1512124,"line_start":1389,"line_end":1389,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1512952,"byte_end":1512969,"line_start":1422,"line_end":1422,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1513547,"byte_end":1513557,"line_start":1452,"line_end":1452,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1524854,"byte_end":1524868,"line_start":1709,"line_end":1709,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1525687,"byte_end":1525703,"line_start":1742,"line_end":1742,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1526292,"byte_end":1526305,"line_start":1773,"line_end":1773,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1526827,"byte_end":1526840,"line_start":1799,"line_end":1799,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1527537,"byte_end":1527552,"line_start":1830,"line_end":1830,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1528645,"byte_end":1528659,"line_start":1871,"line_end":1871,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1529594,"byte_end":1529609,"line_start":1911,"line_end":1911,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1533384,"byte_end":1533398,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1539800,"byte_end":1539814,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1545117,"byte_end":1545132,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":112406,"byte_end":112414,"line_start":2641,"line_end":2641,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141448,"byte_end":141456,"line_start":3329,"line_end":3329,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141603,"byte_end":141611,"line_start":3336,"line_end":3336,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141630,"byte_end":141638,"line_start":3338,"line_end":3338,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141783,"byte_end":141791,"line_start":3345,"line_end":3345,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":151914,"byte_end":151921,"line_start":3595,"line_end":3595,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":180318,"byte_end":180331,"line_start":4218,"line_end":4218,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":186826,"byte_end":186833,"line_start":4339,"line_end":4339,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":41567,"byte_end":41570,"line_start":736,"line_end":736,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1206}}],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,98,105,103,53,46,114,115],"byte_start":304863,"byte_end":304874,"line_start":21,"line_end":21,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,98,105,103,53,46,114,115],"byte_start":310758,"byte_end":310769,"line_start":165,"line_end":165,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":319890,"byte_end":319902,"line_start":25,"line_end":25,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":320391,"byte_end":320403,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,106,112,46,114,115],"byte_start":327538,"byte_end":327550,"line_start":222,"line_end":222,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,107,114,46,114,115],"byte_start":337001,"byte_end":337013,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,101,117,99,95,107,114,46,114,115],"byte_start":346357,"byte_end":346369,"line_start":226,"line_end":226,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":353695,"byte_end":353709,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":354260,"byte_end":354274,"line_start":51,"line_end":51,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,103,98,49,56,48,51,48,46,114,115],"byte_start":369566,"byte_end":369580,"line_start":398,"line_end":398,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":382848,"byte_end":382864,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,105,115,111,95,50,48,50,50,95,106,112,46,114,115],"byte_start":399182,"byte_end":399198,"line_start":419,"line_end":419,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,114,101,112,108,97,99,101,109,101,110,116,46,114,115],"byte_start":426922,"byte_end":426940,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":430235,"byte_end":430250,"line_start":22,"line_end":22,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,104,105,102,116,95,106,105,115,46,114,115],"byte_start":437264,"byte_end":437279,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":446850,"byte_end":446867,"line_start":19,"line_end":19,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,115,105,110,103,108,101,95,98,121,116,101,46,114,115],"byte_start":457698,"byte_end":457715,"line_start":235,"line_end":235,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":338},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,49,54,46,114,115],"byte_start":476987,"byte_end":476999,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,56,46,114,115],"byte_start":514053,"byte_end":514064,"line_start":462,"line_end":462,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,117,116,102,95,56,46,114,115],"byte_start":518833,"byte_end":518844,"line_start":610,"line_end":610,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":543067,"byte_end":543085,"line_start":32,"line_end":32,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,120,95,117,115,101,114,95,100,101,102,105,110,101,100,46,114,115],"byte_start":546608,"byte_end":546626,"line_start":151,"line_end":151,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466355,"byte_end":1466364,"line_start":77,"line_end":77,"column_start":17,"column_end":26},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":742},"to":{"krate":0,"index":738}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466565,"byte_end":1466577,"line_start":87,"line_end":87,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":748},"to":{"krate":0,"index":738}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1466807,"byte_end":1466824,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1476057,"byte_end":1476067,"line_start":373,"line_end":373,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1476890,"byte_end":1476904,"line_start":410,"line_end":410,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1477481,"byte_end":1477497,"line_start":437,"line_end":437,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1478090,"byte_end":1478104,"line_start":468,"line_end":468,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1479389,"byte_end":1479406,"line_start":518,"line_end":518,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1481111,"byte_end":1481127,"line_start":580,"line_end":580,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1489326,"byte_end":1489339,"line_start":801,"line_end":801,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1490613,"byte_end":1490629,"line_start":851,"line_end":851,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1492321,"byte_end":1492336,"line_start":913,"line_end":913,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1500928,"byte_end":1500939,"line_start":1144,"line_end":1144,"column_start":10,"column_end":21},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1512109,"byte_end":1512124,"line_start":1389,"line_end":1389,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1512952,"byte_end":1512969,"line_start":1422,"line_end":1422,"column_start":14,"column_end":31},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1513547,"byte_end":1513557,"line_start":1452,"line_end":1452,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1524854,"byte_end":1524868,"line_start":1709,"line_end":1709,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1525687,"byte_end":1525703,"line_start":1742,"line_end":1742,"column_start":14,"column_end":30},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1526292,"byte_end":1526305,"line_start":1773,"line_end":1773,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1526827,"byte_end":1526840,"line_start":1799,"line_end":1799,"column_start":14,"column_end":27},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1527537,"byte_end":1527552,"line_start":1830,"line_end":1830,"column_start":14,"column_end":29},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1528645,"byte_end":1528659,"line_start":1871,"line_end":1871,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":1106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,104,97,110,100,108,101,115,46,114,115],"byte_start":1529594,"byte_end":1529609,"line_start":1911,"line_end":1911,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1533384,"byte_end":1533398,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1539800,"byte_end":1539814,"line_start":175,"line_end":175,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":1184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,118,97,114,105,97,110,116,46,114,115],"byte_start":1545117,"byte_end":1545132,"line_start":307,"line_end":307,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":1198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":112406,"byte_end":112414,"line_start":2641,"line_end":2641,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141448,"byte_end":141456,"line_start":3329,"line_end":3329,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2318}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141603,"byte_end":141611,"line_start":3336,"line_end":3336,"column_start":13,"column_end":21},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2324}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141630,"byte_end":141638,"line_start":3338,"line_end":3338,"column_start":15,"column_end":23},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":7400}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":141783,"byte_end":141791,"line_start":3345,"line_end":3345,"column_start":26,"column_end":34},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":7834}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":151914,"byte_end":151921,"line_start":3595,"line_end":3595,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":1546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":180318,"byte_end":180331,"line_start":4218,"line_end":4218,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,101,110,99,111,100,105,110,103,95,114,115,45,48,46,56,46,49,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":186826,"byte_end":186833,"line_start":4339,"line_end":4339,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}}]}