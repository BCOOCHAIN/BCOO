{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.0","prelude":{"crate_id":{"name":"bincode","disambiguator":[14128446152187424107,15452581609549471927]},"crate_root":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[451015332518386345,12616910850237566401]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[16746868065623213498,9074085878651121975]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11691455356848847772,13404935376487248212]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[7539909478603523759,1507731599405122440]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[10865508162509001456,833405817713000449]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12627880532723991922,9080356613218334855]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15184984254005438421,13421964498468238256]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[5844413487463745628,10504756031280733323]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":9,"id":{"name":"byteorder","disambiguator":[7325039776332790614,3312035369903071197]}},{"file_name":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","num":10,"id":{"name":"serde","disambiguator":[10261725377991091644,445395959861151597]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":5184,"line_start":1,"line_end":177,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1193,"byte_end":1198,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1200,"byte_end":1209,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":544},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1211,"byte_end":1217,"line_start":48,"line_end":48,"column_start":35,"column_end":41},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1236,"byte_end":1242,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1263,"byte_end":1274,"line_start":50,"line_end":50,"column_start":20,"column_end":31},"alias_span":null,"name":"BincodeRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1276,"byte_end":1284,"line_start":50,"line_end":50,"column_start":33,"column_end":41},"alias_span":null,"name":"IoReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1286,"byte_end":1297,"line_start":50,"line_end":50,"column_start":43,"column_end":54},"alias_span":null,"name":"SliceReader","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":5184,"line_start":1,"line_end":177,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\luhuimao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bincode-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":162},{"krate":0,"index":528},{"krate":0,"index":570},{"krate":0,"index":776},{"krate":0,"index":838},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":856},{"krate":0,"index":862},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886}],"decl_id":null,"docs":" Bincode is a crate for encoding and decoding using a tiny binary\n serialization strategy.  Using it, you can easily go from having\n an object in memory, quickly serialize it to bytes, and then\n deserialize it back just as fast!","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"bincode\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":987,"byte_end":1013,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"crate_type = \"rlib\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1014,"byte_end":1037,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1038,"byte_end":1062,"line_start":36,"line_end":36,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":5596,"byte_end":5601,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Limit","qualname":"::config::Options::Limit","value":"type Limit: SizeLimit + 'static;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":5633,"byte_end":5639,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Endian","qualname":"::config::Options::Endian","value":"type Endian: ByteOrder + 'static;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":5670,"byte_end":5675,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"limit","qualname":"::config::Options::limit","value":"fn (&mut self) -> &mut Self::Limit","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":7806,"byte_end":7812,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" A configuration builder whose options Bincode will use\n while serializing and deserializing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10403,"byte_end":10411,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"no_limit","qualname":"<Config>::no_limit","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to be unlimited.\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10374,"byte_end":10391,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10576,"byte_end":10581,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"limit","qualname":"<Config>::limit","value":"fn (&mut self, limit: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the byte limit to `limit`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10547,"byte_end":10564,"line_start":203,"line_end":203,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10797,"byte_end":10810,"line_start":212,"line_end":212,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Config>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to little-endian\n This is the default.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10768,"byte_end":10785,"line_start":211,"line_end":211,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10976,"byte_end":10986,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Config>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to big-endian\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10947,"byte_end":10964,"line_start":218,"line_end":218,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11171,"byte_end":11184,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Config>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the endianness to the the machine-native endianness\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11142,"byte_end":11159,"line_start":225,"line_end":225,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11396,"byte_end":11405,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Config>::serialize","value":"fn <T> (&self, t: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11367,"byte_end":11384,"line_start":232,"line_end":232,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11678,"byte_end":11693,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"serialized_size","qualname":"<Config>::serialized_size","value":"fn <T> (&self, t: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":11649,"byte_end":11666,"line_start":238,"line_end":238,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12115,"byte_end":12129,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"serialize_into","qualname":"<Config>::serialize_into","value":"fn <W, T> (&self, w: W, t: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12086,"byte_end":12103,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12407,"byte_end":12418,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Config>::deserialize","value":"fn <'a, T> (&self, bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using this configuration\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12378,"byte_end":12395,"line_start":253,"line_end":253,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12643,"byte_end":12663,"line_start":261,"line_end":261,"column_start":12,"column_end":32},"name":"deserialize_in_place","qualname":"<Config>::deserialize_in_place","value":"fn <'a, R, T> (&self, reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" TODO: document\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":12614,"byte_end":12631,"line_start":260,"line_end":260,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":13096,"byte_end":13112,"line_start":273,"line_end":273,"column_start":12,"column_end":28},"name":"deserialize_from","qualname":"<Config>::deserialize_from","value":"fn <R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using this configuration","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":13067,"byte_end":13084,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":13615,"byte_end":13638,"line_start":283,"line_end":283,"column_start":12,"column_end":35},"name":"deserialize_from_custom","qualname":"<Config>::deserialize_from_custom","value":"fn <'a, R, T> (&self, reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":13586,"byte_end":13603,"line_start":282,"line_end":282,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":13961,"byte_end":13978,"line_start":290,"line_end":290,"column_start":12,"column_end":29},"name":"with_deserializer","qualname":"<Config>::with_deserializer","value":"fn <'a, A, R> (&self, reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":14422,"byte_end":14437,"line_start":303,"line_end":303,"column_start":12,"column_end":27},"name":"with_serializer","qualname":"<Config>::with_serializer","value":"fn <A, W> (&self, writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":15346,"byte_end":15349,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer<W, O>>::new","value":"fn (w: W, options: O) -> Serializer<W, O>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Serializer with the given `Write`r.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":21456,"byte_end":21463,"line_start":241,"line_end":241,"column_start":9,"column_end":16},"name":"options","qualname":"::ser::SizeChecker::options","value":"O","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":21516,"byte_end":21519,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeChecker<O>>::new","value":"fn (options: O) -> SizeChecker<O>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":544},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":33938,"byte_end":33944,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a serialization or deserialization operation.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":546},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34051,"byte_end":34056,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Box<ErrorKind>","parent":null,"children":[],"decl_id":null,"docs":" An error that can be produced during (de)serializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34352,"byte_end":34354,"line_start":19,"line_end":19,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" If the error stems from the reader/writer that is being used\n during (de)serialization, that error will be stored and returned here.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":565},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34464,"byte_end":34483,"line_start":21,"line_end":21,"column_start":5,"column_end":24},"name":"InvalidUtf8Encoding","qualname":"::error::ErrorKind::InvalidUtf8Encoding","value":"ErrorKind::InvalidUtf8Encoding(Utf8Error)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a string that is not valid utf8\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34618,"byte_end":34637,"line_start":24,"line_end":24,"column_start":5,"column_end":24},"name":"InvalidBoolEncoding","qualname":"::error::ErrorKind::InvalidBoolEncoding","value":"ErrorKind::InvalidBoolEncoding(u8)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a bool that was\n not encoded as either a 1 or a 0\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":573},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34750,"byte_end":34769,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"InvalidCharEncoding","qualname":"::error::ErrorKind::InvalidCharEncoding","value":"ErrorKind::InvalidCharEncoding","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize a char that is not in the correct format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34898,"byte_end":34916,"line_start":29,"line_end":29,"column_start":5,"column_end":23},"name":"InvalidTagEncoding","qualname":"::error::ErrorKind::InvalidTagEncoding","value":"ErrorKind::InvalidTagEncoding(usize)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Returned if the deserializer attempts to deserialize the tag of an enum that is\n not in the expected ranges\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35058,"byte_end":35084,"line_start":32,"line_end":32,"column_start":5,"column_end":31},"name":"DeserializeAnyNotSupported","qualname":"::error::ErrorKind::DeserializeAnyNotSupported","value":"ErrorKind::DeserializeAnyNotSupported","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Serde has a deserialize_any method that lets the format hint to the\n object which route to take in deserializing.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35200,"byte_end":35209,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::error::ErrorKind::SizeLimit","value":"ErrorKind::SizeLimit","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" If (de)serializing a message takes more than the provided size limit, this\n error is returned.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":583},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35292,"byte_end":35314,"line_start":37,"line_end":37,"column_start":5,"column_end":27},"name":"SequenceMustHaveLength","qualname":"::error::ErrorKind::SequenceMustHaveLength","value":"ErrorKind::SequenceMustHaveLength","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Bincode can not encode sequences of unknown length (like iterators).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35363,"byte_end":35369,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Custom","qualname":"::error::ErrorKind::Custom","value":"ErrorKind::Custom(String)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" A custom error message from Serde.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":916},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":34188,"byte_end":34197,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"ErrorKind::{Io, InvalidUtf8Encoding, InvalidBoolEncoding, InvalidCharEncoding, InvalidTagEncoding, DeserializeAnyNotSupported, SizeLimit, SequenceMustHaveLength, Custom}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585}],"decl_id":null,"docs":" The kind of error that can be produced during a serialization or deserialization.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":52834,"byte_end":52845,"line_start":9,"line_end":9,"column_start":11,"column_end":22},"name":"BincodeRead","qualname":"::de::read::BincodeRead","value":"BincodeRead<'storage>: io::Read","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610}],"decl_id":null,"docs":" An optional Read trait for advanced Bincode usage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":52951,"byte_end":52967,"line_start":11,"line_end":11,"column_start":8,"column_end":24},"name":"forward_read_str","qualname":"::de::read::BincodeRead::forward_read_str","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes of a string on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53157,"byte_end":53172,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"get_byte_buffer","qualname":"::de::read::BincodeRead::get_byte_buffer","value":"fn (&mut self, length: usize) -> Result<Vec<u8>>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Return the first `length` bytes of the internal byte buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53291,"byte_end":53309,"line_start":19,"line_end":19,"column_start":8,"column_end":26},"name":"forward_read_bytes","qualname":"::de::read::BincodeRead::forward_read_bytes","value":"fn <V> (&mut self, length: usize, visitor: V) -> Result<V::Value>","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Forwards reading `length` bytes on to the serde reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53540,"byte_end":53551,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"SliceReader","qualname":"::de::read::SliceReader","value":"SliceReader {  }","parent":null,"children":[{"krate":0,"index":283}],"decl_id":null,"docs":" A BincodeRead implementation for byte slices\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53709,"byte_end":53717,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IoReader","qualname":"::de::read::IoReader","value":"IoReader {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":289}],"decl_id":null,"docs":" A BincodeRead implementation for io::Readers\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53851,"byte_end":53854,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<SliceReader<'storage>>::new","value":"fn (bytes: &'storage [u8]) -> SliceReader<'storage>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a slice reader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54019,"byte_end":54022,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<IoReader<R>>::new","value":"fn (r: R) -> IoReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an IoReadReader\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61107,"byte_end":61110,"line_start":121,"line_end":121,"column_start":8,"column_end":11},"name":"add","qualname":"::internal::SizeLimit::add","value":"fn (&mut self, n: u64) -> Result<()>","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" Tells the SizeLimit that a certain number of bytes has been\n read or written.  Returns Err if the limit has been exceeded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61199,"byte_end":61204,"line_start":123,"line_end":123,"column_start":8,"column_end":13},"name":"limit","qualname":"::internal::SizeLimit::limit","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" Returns the hard limit (if one exists)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1516,"byte_end":1536,"line_start":57,"line_end":57,"column_start":11,"column_end":31},"name":"DeserializerAcceptor","qualname":"::DeserializerAcceptor","value":"DeserializerAcceptor<'a>","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":860}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Deserializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":858},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1598,"byte_end":1604,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Output","qualname":"::DeserializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1684,"byte_end":1690,"line_start":61,"line_end":61,"column_start":8,"column_end":14},"name":"accept","qualname":"::DeserializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":" Accept a serde::Deserializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1959,"byte_end":1977,"line_start":69,"line_end":69,"column_start":11,"column_end":29},"name":"SerializerAcceptor","qualname":"::SerializerAcceptor","value":"SerializerAcceptor","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866}],"decl_id":null,"docs":" An object that implements this trait can be passed a\n serde::Serializer without knowing its concrete type.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":864},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2035,"byte_end":2041,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Output","qualname":"::SerializerAcceptor::Output","value":"type Output;","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" The return type for the accept method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2119,"byte_end":2125,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"accept","qualname":"::SerializerAcceptor::accept","value":"fn <T> (self, T) -> Self::Output","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Accept a serde::Serializer and do whatever you want with it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":868},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2359,"byte_end":2365,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"config","qualname":"::config","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Get a default configuration object.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":870},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2649,"byte_end":2663,"line_start":91,"line_end":91,"column_start":8,"column_end":22},"name":"serialize_into","qualname":"::serialize_into","value":"fn <W, T> (writer: W, value: &T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Serializes an object directly into a `Writer` using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2915,"byte_end":2924,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"serialize","qualname":"::serialize","value":"fn <T> (value: &T) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a serializable object into a `Vec` of bytes using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3197,"byte_end":3213,"line_start":110,"line_end":110,"column_start":8,"column_end":24},"name":"deserialize_from","qualname":"::deserialize_from","value":"fn <R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object directly from a `Read`er using the default configuration.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":876},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3648,"byte_end":3671,"line_start":123,"line_end":123,"column_start":8,"column_end":31},"name":"deserialize_from_custom","qualname":"::deserialize_from_custom","value":"fn <'a, R, T> (reader: R) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes an object from a custom `BincodeRead`er using the default configuration.\n It is highly recommended to use `deserialize_from` unless you need to implement\n `BincodeRead` for performance reasons.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":878},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3943,"byte_end":3963,"line_start":135,"line_end":135,"column_start":8,"column_end":28},"name":"deserialize_in_place","qualname":"::deserialize_in_place","value":"fn <'a, R, T> (reader: R, place: &mut T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Only use this if you know what you're doing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":880},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4230,"byte_end":4241,"line_start":144,"line_end":144,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::deserialize","value":"fn <'a, T> (bytes: &'a [u8]) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a slice of bytes into an instance of `T` using the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4469,"byte_end":4484,"line_start":152,"line_end":152,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::serialized_size","value":"fn <T> (value: &T) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size that an object would be if serialized using Bincode with the default configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4719,"byte_end":4736,"line_start":162,"line_end":162,"column_start":8,"column_end":25},"name":"with_deserializer","qualname":"::with_deserializer","value":"fn <'a, A, R> (reader: R, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Deserializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":886},"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":5024,"byte_end":5039,"line_start":172,"line_end":172,"column_start":8,"column_end":23},"name":"with_serializer","qualname":"::with_serializer","value":"fn <A, W> (writer: W, acceptor: A) -> A::Output","parent":null,"children":[],"decl_id":null,"docs":" Executes the acceptor with a serde::Serializer instance.\n NOT A PART OF THE STABLE PUBLIC API\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6576,"byte_end":6577,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6587,"byte_end":6601,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6696,"byte_end":6710,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8120,"byte_end":8134,"line_start":114,"line_end":114,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8371,"byte_end":8386,"line_start":124,"line_end":124,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8640,"byte_end":8655,"line_start":134,"line_end":134,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8869,"byte_end":8883,"line_start":144,"line_end":144,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10110,"byte_end":10116,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":15258,"byte_end":15268,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":21488,"byte_end":21499,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":26667,"byte_end":26675,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27067,"byte_end":27075,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27473,"byte_end":27481,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27878,"byte_end":27886,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":28274,"byte_end":28282,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":28852,"byte_end":28860,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":29278,"byte_end":29286,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":29790,"byte_end":29802,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30161,"byte_end":30173,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30538,"byte_end":30550,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30914,"byte_end":30926,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":31285,"byte_end":31297,"line_start":685,"line_end":685,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":31834,"byte_end":31846,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":32231,"byte_end":32243,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":33670,"byte_end":33680,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35400,"byte_end":35409,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":36855,"byte_end":36860,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":36967,"byte_end":36976,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":38128,"byte_end":38133,"line_start":109,"line_end":109,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":38274,"byte_end":38279,"line_start":115,"line_end":115,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53782,"byte_end":53793,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53959,"byte_end":53967,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54168,"byte_end":54179,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54487,"byte_end":54495,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54768,"byte_end":54779,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":55025,"byte_end":55036,"line_start":87,"line_end":87,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":646},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":56360,"byte_end":56368,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":56815,"byte_end":56823,"line_start":152,"line_end":152,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":39231,"byte_end":39243,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":46334,"byte_end":46340,"line_start":268,"line_end":268,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":48209,"byte_end":48215,"line_start":334,"line_end":334,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":58820,"byte_end":58829,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61569,"byte_end":61576,"line_start":137,"line_end":137,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61906,"byte_end":61914,"line_start":154,"line_end":154,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":5740,"byte_end":5747,"line_start":22,"line_end":22,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":56},"to":{"krate":0,"index":64}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":5750,"byte_end":5755,"line_start":22,"line_end":22,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1644},"to":{"krate":0,"index":64}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6576,"byte_end":6577,"line_start":54,"line_end":54,"column_start":33,"column_end":34},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":27},"to":{"krate":0,"index":64}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6587,"byte_end":6601,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":6696,"byte_end":6710,"line_start":62,"line_end":62,"column_start":18,"column_end":32},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":54},"to":{"krate":0,"index":56}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8120,"byte_end":8134,"line_start":114,"line_end":114,"column_start":32,"column_end":46},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8371,"byte_end":8386,"line_start":124,"line_end":124,"column_start":32,"column_end":47},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8640,"byte_end":8655,"line_start":134,"line_end":134,"column_start":54,"column_end":69},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":102},"to":{"krate":0,"index":56}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8869,"byte_end":8883,"line_start":144,"line_end":144,"column_start":54,"column_end":68},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":100},"to":{"krate":0,"index":56}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":10110,"byte_end":10116,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":15258,"byte_end":15268,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":21488,"byte_end":21499,"line_start":244,"line_end":244,"column_start":18,"column_end":29},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":26667,"byte_end":26675,"line_start":447,"line_end":447,"column_start":45,"column_end":53},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1864}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27067,"byte_end":27075,"line_start":469,"line_end":469,"column_start":47,"column_end":55},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1874}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27473,"byte_end":27481,"line_start":491,"line_end":491,"column_start":53,"column_end":61},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":27878,"byte_end":27886,"line_start":513,"line_end":513,"column_start":54,"column_end":62},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1894}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":28274,"byte_end":28282,"line_start":535,"line_end":535,"column_start":45,"column_end":53},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1904}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":28852,"byte_end":28860,"line_start":565,"line_end":565,"column_start":48,"column_end":56},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1918}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":29278,"byte_end":29286,"line_start":587,"line_end":587,"column_start":55,"column_end":63},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":358},"to":{"krate":10,"index":1930}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":29790,"byte_end":29802,"line_start":613,"line_end":613,"column_start":51,"column_end":63},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1864}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30161,"byte_end":30173,"line_start":631,"line_end":631,"column_start":53,"column_end":65},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1874}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30538,"byte_end":30550,"line_start":649,"line_end":649,"column_start":59,"column_end":71},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1884}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":30914,"byte_end":30926,"line_start":667,"line_end":667,"column_start":60,"column_end":72},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1894}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":31285,"byte_end":31297,"line_start":685,"line_end":685,"column_start":55,"column_end":67},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1904}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":31834,"byte_end":31846,"line_start":711,"line_end":711,"column_start":54,"column_end":66},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1918}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":32231,"byte_end":32243,"line_start":729,"line_end":729,"column_start":61,"column_end":73},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":432},"to":{"krate":10,"index":1930}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,115,101,114,92,109,111,100,46,114,115],"byte_start":33670,"byte_end":33680,"line_start":784,"line_end":784,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":35400,"byte_end":35409,"line_start":42,"line_end":42,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":916},"to":{"krate":1,"index":2338}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":36855,"byte_end":36860,"line_start":76,"line_end":76,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":546},"to":{"krate":2,"index":2562}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":36967,"byte_end":36976,"line_start":82,"line_end":82,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":916},"to":{"krate":2,"index":7838}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":38128,"byte_end":38133,"line_start":109,"line_end":109,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":546},"to":{"krate":10,"index":7536}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":38274,"byte_end":38279,"line_start":115,"line_end":115,"column_start":28,"column_end":33},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":546},"to":{"krate":10,"index":7908}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":52861,"byte_end":52865,"line_start":9,"line_end":9,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":4218},"to":{"krate":0,"index":604}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53782,"byte_end":53793,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":53959,"byte_end":53967,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54168,"byte_end":54179,"line_start":56,"line_end":56,"column_start":29,"column_end":40},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":612},"to":{"krate":1,"index":4218}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54487,"byte_end":54495,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":614},"to":{"krate":1,"index":4218}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":54768,"byte_end":54779,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":55025,"byte_end":55036,"line_start":87,"line_end":87,"column_start":42,"column_end":53},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":612},"to":{"krate":0,"index":604}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":56360,"byte_end":56368,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,114,101,97,100,46,114,115],"byte_start":56815,"byte_end":56823,"line_start":152,"line_end":152,"column_start":34,"column_end":42},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":614},"to":{"krate":0,"index":604}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":39231,"byte_end":39243,"line_start":32,"line_end":32,"column_start":44,"column_end":56},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":46334,"byte_end":46340,"line_start":268,"line_end":268,"column_start":41,"column_end":47},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":718},"to":{"krate":10,"index":1406}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,100,101,92,109,111,100,46,114,115],"byte_start":48209,"byte_end":48215,"line_start":334,"line_end":334,"column_start":41,"column_end":47},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":734},"to":{"krate":10,"index":1426}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":58820,"byte_end":58829,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":942},"to":{"krate":0,"index":820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":60954,"byte_end":60959,"line_start":118,"line_end":118,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2506},"to":{"krate":0,"index":820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61569,"byte_end":61576,"line_start":137,"line_end":137,"column_start":20,"column_end":27},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":948},"to":{"krate":0,"index":820}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,108,117,104,117,105,109,97,111,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,98,105,110,99,111,100,101,45,49,46,48,46,49,92,115,114,99,92,105,110,116,101,114,110,97,108,46,114,115],"byte_start":61906,"byte_end":61914,"line_start":154,"line_end":154,"column_start":20,"column_end":28},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":956},"to":{"krate":0,"index":820}}]}